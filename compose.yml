services:
  assets:
    build: assets

  core:
    build: core

  interface-deps:
    build:
      context: interface
      target: deps

  interface:
    build: interface
    depends_on:
      - assets
      - core
      - interface-deps

  sandbox-deps:
    build:
      context: sandbox
      target: deps

  sandbox:
    build: sandbox
    ports:
      - "127.0.0.1:2437:5173"
    depends_on:
      - sandbox-deps
      - core
      - interface

  offline-deps:
    build:
      context: offline
      target: deps

  offline:
    build: offline
    ports:
      - "127.0.0.1:5423:5173"
    depends_on:
      - offline-deps
      - core
      - interface

  coverage:
    build:
      context: .
      dockerfile: coverage/Dockerfile
    ports:
      - "6245:80"
    depends_on:
      - core
  
  database:
    build : database
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      DB_USERNAME: dbUser
      DB_PASSWORD: example
      MONGO_INITDB_DATABASE: '${DB_NAME:-test}'
      IS_REPLICA_SET_INITIATOR: true

  database1:
    build : database
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      DB_USERNAME: dbUser
      DB_PASSWORD: example
      MONGO_INITDB_DATABASE: '${DB_NAME:-test}'

  database2:
    build : database
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      DB_USERNAME: dbUser
      DB_PASSWORD: example
      MONGO_INITDB_DATABASE: '${DB_NAME:-test}'

  back:
    build: back
    environment:
      MONGODB_USERNAME: dbUser
      MONGODB_PASSWORD: example
      MONGODB_DATABASE: test
    depends_on:
      - core
      - database
      - database1
      - database2

